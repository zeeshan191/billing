{"ast":null,"code":"var _jsxFileName = \"C:\\\\billing-app-main\\\\src\\\\components\\\\userAuth\\\\Registration.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport validator from 'validator';\nimport { Box, Grid, Paper, Avatar, TextField, Button, Typography } from '@material-ui/core';\nimport VpnKeyOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Registration({\n  history\n}) {\n  _s();\n\n  const [userName, steUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [businessName, setBusinessName] = useState('');\n  const [address, setAddress] = useState('');\n  const [formErrors, setFormErrors] = useState({});\n  const errors = {};\n\n  const handleInput = e => {\n    const input = e.target.name;\n\n    if (input === \"username\") {\n      steUserName(e.target.value);\n    } else if (input === \"email\") {\n      setEmail(e.target.value);\n    } else if (input === \"password\") {\n      setPassword(e.target.value);\n    } else if (input === \"businessName\") {\n      setBusinessName(e.target.value);\n    } else if (input === \"address\") {\n      setAddress(e.target.value);\n    }\n  };\n\n  const runValidation = () => {\n    //name\n    if (userName.trim().length === 0) {\n      errors.username = \"name cannot be blank\";\n    } //for email\n\n\n    if (email.trim().length === 0) {\n      errors.email = \"email cannot be blank\";\n    } else if (!validator.isEmail(email)) {\n      errors.email = \"invalid email format\";\n    } // for password\n\n\n    if (password.trim().length === 0) {\n      errors.password = \"password cannot be blank\";\n    } // for businessname\n\n\n    if (businessName.trim().length === 0) {\n      errors.businessName = \"businessName cannot be blank\";\n    } // for address\n\n\n    if (address.trim().length === 0) {\n      errors.address = \"address cannot be blank\";\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // for validation \n\n    runValidation();\n\n    if (Object.keys(errors).length === 0) {\n      setFormErrors({});\n      const formData = {\n        username: userName,\n        email: email,\n        password: password,\n        businessName: businessName,\n        address: address\n      };\n      axios.post('https://dct-billing-app.herokuapp.com/api/users/register', formData).then(responce => {\n        const result = responce.data;\n\n        if (Object.keys(result).includes('errors')) {\n          swal(result.errors);\n        } else {\n          swal('successfully created an account');\n          history.push('/login');\n        }\n      }).catch(err => {\n        swal(err.message);\n      }); // reset form \n\n      steUserName('');\n      setEmail('');\n      setPassword('');\n      setBusinessName('');\n      setAddress('');\n    } else {\n      setFormErrors(errors);\n    }\n  };\n\n  const avatarStyle = {\n    backgroundColor: '#055205'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        component: Box,\n        width: \"40%\",\n        mx: \"auto\",\n        p: 4,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            style: avatarStyle,\n            children: [\" \", /*#__PURE__*/_jsxDEV(VpnKeyOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 59\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                placeholder: \"Enter your Name\",\n                margin: \"normal\",\n                variant: \"outlined\",\n                color: \"secondary\",\n                label: \"Name\",\n                value: userName,\n                name: \"username\",\n                onChange: handleInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 25\n              }, this), formErrors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: formErrors.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                placeholder: \"Enter your Email\",\n                margin: \"normal\",\n                variant: \"outlined\",\n                color: \"secondary\",\n                label: \"Email\",\n                value: email,\n                name: \"email\",\n                onChange: handleInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 25\n              }, this), formErrors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: formErrors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                placeholder: \"Enter Password\",\n                margin: \"normal\",\n                variant: \"outlined\",\n                color: \"secondary\",\n                label: \"Password\",\n                type: \"password\",\n                value: password,\n                name: \"password\",\n                onChange: handleInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 25\n              }, this), formErrors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: [\" \", formErrors.password, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                placeholder: \"Enter your businessName\",\n                margin: \"normal\",\n                variant: \"outlined\",\n                color: \"secondary\",\n                label: \"Business Name\",\n                value: businessName,\n                name: \"businessName\",\n                onChange: handleInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 25\n              }, this), formErrors.businessName && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: formErrors.businessName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                placeholder: \"Enter your Address\",\n                margin: \"normal\",\n                variant: \"outlined\",\n                color: \"secondary\",\n                label: \"Address\",\n                multiline: true,\n                rows: 4,\n                value: address,\n                name: \"address\",\n                onChange: handleInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 25\n              }, this), formErrors.address && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: formErrors.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"secondary\",\n                children: \" SignUp \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                position: 'relative',\n                top: 20\n              },\n              children: [\"Already a user?\", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Registration, \"NGHCntRjsqOI+8C+4jUeoX52O20=\");\n\n_c = Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["C:/billing-app-main/src/components/userAuth/Registration.js"],"names":["React","useState","Link","axios","swal","validator","Box","Grid","Paper","Avatar","TextField","Button","Typography","VpnKeyOutlinedIcon","Registration","history","userName","steUserName","email","setEmail","password","setPassword","businessName","setBusinessName","address","setAddress","formErrors","setFormErrors","errors","handleInput","e","input","target","name","value","runValidation","trim","length","username","isEmail","handleSubmit","preventDefault","Object","keys","formData","post","then","responce","result","data","includes","push","catch","err","message","avatarStyle","backgroundColor","color","position","top"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport swal from 'sweetalert'\r\nimport validator from 'validator'\r\nimport { Box, Grid, Paper, Avatar, TextField, Button, Typography } from '@material-ui/core'\r\nimport VpnKeyOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\r\n\r\n\r\nexport default function Registration({history}){\r\n\r\n\r\n    const [userName, steUserName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword] = useState('')\r\n    const [businessName , setBusinessName] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [formErrors , setFormErrors] = useState({})\r\n    const errors= {}\r\n\r\n    const handleInput = (e)=>{\r\n        const input  = e.target.name\r\n        if(input === \"username\"){\r\n            steUserName(e.target.value)\r\n        } else if(input === \"email\"){\r\n            setEmail(e.target.value)\r\n        } else if (input === \"password\"){\r\n            setPassword(e.target.value)\r\n        } else if(input === \"businessName\"){\r\n            setBusinessName(e.target.value)\r\n        } else if(input === \"address\"){\r\n            setAddress(e.target.value)\r\n        }\r\n    }\r\n    \r\n    const runValidation = ()=>{\r\n        //name\r\n        if(userName.trim().length === 0){\r\n            errors.username = \"name cannot be blank\"\r\n        }\r\n        //for email\r\n        if(email.trim().length === 0){\r\n            errors.email = \"email cannot be blank\"\r\n        } else if(!(validator.isEmail(email))){\r\n            errors.email = \"invalid email format\"\r\n        }\r\n\r\n        // for password\r\n        if(password.trim().length === 0){\r\n            errors.password = \"password cannot be blank\"\r\n        }\r\n        // for businessname\r\n        if(businessName.trim().length === 0){\r\n            errors.businessName = \"businessName cannot be blank\"\r\n        }\r\n\r\n        // for address\r\n        if(address.trim().length === 0){\r\n            errors.address = \"address cannot be blank\"\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        // for validation \r\n        runValidation ()\r\n\r\n        if(Object.keys(errors).length === 0){\r\n            setFormErrors({})\r\n            const formData = {\r\n                username : userName,\r\n                email    : email,\r\n                password : password,\r\n                businessName : businessName,\r\n                address : address\r\n    \r\n            }\r\n\r\n            axios.post('https://dct-billing-app.herokuapp.com/api/users/register' , formData)\r\n            .then((responce)=>{\r\n                const result = responce.data\r\n                if(Object.keys(result).includes('errors')){\r\n                    swal(result.errors)\r\n                } else {\r\n                    swal('successfully created an account')\r\n                    history.push('/login')\r\n                }\r\n            })\r\n            .catch((err)=>{\r\n                swal(err.message)\r\n            })\r\n\r\n                // reset form \r\n                steUserName('')\r\n                setEmail('')\r\n                setPassword('')\r\n                setBusinessName('')\r\n                setAddress('')\r\n\r\n        } else {\r\n            setFormErrors(errors)\r\n        }\r\n\r\n    }\r\n\r\n    const avatarStyle={backgroundColor:'#055205'}\r\n\r\n    return(\r\n        <div>\r\n            <Grid>\r\n                \r\n                <Paper component ={Box} width =\"40%\" mx= \"auto\" p={4}>\r\n                    <Grid align='center'>\r\n                             <Avatar style={avatarStyle}> <VpnKeyOutlinedIcon/> </Avatar>\r\n                             <h2>Sign Up</h2>\r\n                     </Grid>\r\n\r\n                     <form onSubmit={handleSubmit}>\r\n                     <Grid  container spacing={2}>\r\n                     <Grid item xs={12}>\r\n                        <TextField fullWidth placeholder=\"Enter your Name\" margin =\"normal\" variant =\"outlined\" color =\"secondary\" label =\"Name\"\r\n                        value ={userName} name =\"username\" onChange ={handleInput}/>\r\n                        {formErrors.username && <span style={{color : 'red'}}>{formErrors.username}</span>}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                        <TextField fullWidth placeholder =\"Enter your Email\" margin =\"normal\" variant =\"outlined\" color =\"secondary\" label =\"Email\"\r\n                        value ={email} name =\"email\" onChange = {handleInput}/>\r\n                        {formErrors.email && <span style={{color : 'red'}}>{formErrors.email}</span>}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                        <TextField fullWidth placeholder =\"Enter Password\" margin =\"normal\" variant =\"outlined\" color =\"secondary\" label =\"Password\"\r\n                        type = \"password\" value ={password} name =\"password\" onChange ={handleInput}/>\r\n                        { formErrors.password && <span style={{color : 'red'}}> {formErrors.password} </span> }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                        <TextField fullWidth placeholder =\"Enter your businessName\" margin =\"normal\" variant =\"outlined\" color =\"secondary\" label =\"Business Name\"\r\n                        value= {businessName} name = \"businessName\" onChange ={handleInput}/>\r\n                        {formErrors.businessName && <span style={{color : 'red'}}>{formErrors.businessName}</span>}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                        <TextField fullWidth placeholder =\"Enter your Address\" margin =\"normal\" variant =\"outlined\" color =\"secondary\" label =\"Address\" multiline\r\n                        rows ={4} value ={address} name =\"address\" onChange ={handleInput}/>\r\n                        {formErrors.address && <span style={{color : 'red'}}>{formErrors.address}</span>}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" > SignUp </Button>\r\n                        </Grid>\r\n\r\n                        <Typography style = {{position: 'relative', top:20}}>\r\n                        Already a user?\r\n                        <Link to = '/login'>Login</Link>\r\n                    </Typography>\r\n                        </Grid>\r\n                    </form> \r\n                </Paper>\r\n         </Grid>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}