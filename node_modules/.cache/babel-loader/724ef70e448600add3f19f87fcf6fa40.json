{"ast":null,"code":"var _jsxFileName = \"C:\\\\billing-apph\\\\src\\\\components\\\\userAuth\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport validator from 'validator';\nimport { Box, Grid, Paper, Avatar, TextField, Button, Typography } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  history,\n  handleToggle\n}) {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [formError, setFormError] = useState({});\n  const errors = {};\n\n  const handleInput = e => {\n    const input = e.target.name;\n\n    if (input === 'email') {\n      setEmail(e.target.value);\n    } else if (input === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  const runValidation = () => {\n    // for email\n    if (email.trim().length === 0) {\n      errors.email = \"email cannot be empty\";\n    } else if (!validator.isEmail(email)) {\n      errors.email = \"invalid email format\";\n    } // for password\n\n\n    if (password.trim().length === 0) {\n      errors.password = \"password cannot be empty\";\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //for validation \n\n    runValidation();\n\n    if (Object.keys(errors).length === 0) {\n      setFormError({});\n      const formData = {\n        email: email,\n        password: password\n      };\n      axios.post('https://dct-billing-app.herokuapp.com/api/users/login', formData).then(responce => {\n        const result = responce.data;\n\n        if (Object.keys(result).includes('errors')) {\n          swal(result.errors);\n        } else {\n          swal('successfully loggedin');\n          localStorage.setItem('token', result.token);\n          history.push('/account');\n          handleToggle();\n        }\n      }).catch(err => {\n        swal(err.message);\n      });\n    } else {\n      setFormError(errors);\n    } //reset form\n\n\n    setPassword('');\n    setEmail('');\n  };\n\n  const avatarStyle = {\n    backgroundColor: '#055205'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      component: Box,\n      width: \"40%\",\n      mx: \"auto\",\n      p: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          style: avatarStyle,\n          children: [\" \", /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 54\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              placeholder: \"Enter your Email\",\n              margin: \"normal\",\n              variant: \"outlined\",\n              color: \"secondary\",\n              label: \"Email\",\n              value: email,\n              name: \"email\",\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this), formError.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: formError.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              placeholder: \"Enter Password\",\n              margin: \"normal\",\n              variant: \"outlined\",\n              color: \"secondary\",\n              label: \"Password\",\n              type: \"password\",\n              value: password,\n              name: \"password\",\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this), formError.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: [\" \", formError.password, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              children: \" Sign in \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                position: 'relative',\n                top: 20\n              },\n              children: [\"New user?\", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/registration\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"Nx/SlppfDwaSbLhY+FfFu9bFi0w=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/billing-apph/src/components/userAuth/Login.js"],"names":["React","useState","Link","axios","swal","validator","Box","Grid","Paper","Avatar","TextField","Button","Typography","LockOutlinedIcon","Login","history","handleToggle","email","setEmail","password","setPassword","formError","setFormError","errors","handleInput","e","input","target","name","value","runValidation","trim","length","isEmail","handleSubmit","preventDefault","Object","keys","formData","post","then","responce","result","data","includes","localStorage","setItem","token","push","catch","err","message","avatarStyle","backgroundColor","color","position","top"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport swal from 'sweetalert'\r\nimport validator from 'validator'\r\nimport { Box, Grid, Paper, Avatar, TextField, Button, Typography } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nexport default function Login({history , handleToggle}){\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword] = useState('')\r\n    const [formError , setFormError] = useState({})\r\n    const errors = {}\r\n\r\n    const handleInput = (e)=>{\r\n        const input = e.target.name\r\n        if(input === 'email'){\r\n            setEmail(e.target.value)\r\n        } else if(input ===\"password\"){\r\n            setPassword(e.target.value)\r\n        }\r\n    }\r\n\r\n    const runValidation=()=>{\r\n        // for email\r\n        if(email.trim().length === 0){\r\n            errors.email = \"email cannot be empty\"\r\n        } else if(!(validator.isEmail(email))){\r\n            errors.email = \"invalid email format\"\r\n        }\r\n\r\n        // for password\r\n        if(password.trim().length === 0){\r\n            errors.password = \"password cannot be empty\"\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        //for validation \r\n        runValidation()\r\n\r\n        if(Object.keys(errors).length === 0){\r\n            setFormError({})\r\n\r\n            const formData = {\r\n                email : email,\r\n                password : password\r\n            }\r\n    \r\n            axios.post('https://dct-billing-app.herokuapp.com/api/users/login' , formData)\r\n                .then((responce)=>{\r\n                    const result = responce.data\r\n                    if(Object.keys(result).includes('errors')){\r\n                        swal(result.errors)\r\n                    } else{\r\n                        swal('successfully loggedin')\r\n                        localStorage.setItem('token',result.token)\r\n                        history.push('/account')\r\n                        handleToggle()\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    swal(err.message)\r\n                })\r\n        } else {\r\n            setFormError(errors)\r\n        }\r\n        //reset form\r\n        setPassword('')\r\n        setEmail('')\r\n    }\r\n\r\n        const avatarStyle={backgroundColor:'#055205'}\r\n\r\n    return (\r\n        <div>\r\n             <Paper component ={Box} width =\"40%\" mx= \"auto\" p={4}>\r\n             <Grid align='center'>\r\n                        <Avatar style={avatarStyle}> < LockOutlinedIcon/> </Avatar>\r\n                        <h2>Sign In</h2>\r\n                </Grid>\r\n               <Typography component=\"h1\" variant=\"h5\">Login</Typography>\r\n               <form onSubmit={handleSubmit}>\r\n               <Grid  container spacing={2}>\r\n               <Grid item xs={12}>\r\n                    <TextField fullWidth placeholder =\"Enter your Email\" margin =\"normal\" variant =\"outlined\" color =\"secondary\" label =\"Email\"\r\n                        value ={email} name =\"email\" onChange = {handleInput}/>\r\n                        {formError.email && <span style={{color : 'red'}}>{formError.email}</span>}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                    <TextField fullWidth placeholder =\"Enter Password\" margin =\"normal\" variant =\"outlined\" color =\"secondary\" label =\"Password\"\r\n                        type = \"password\" value ={password} name =\"password\" onChange ={handleInput}/>\r\n                        { formError.password && <span style={{color : 'red'}}> {formError.password} </span> }\r\n                        </Grid>\r\n   \r\n                        <Grid item xs={12}>\r\n                   <Button type=\"submit\" variant=\"contained\" color=\"primary\"> Sign in </Button>\r\n                   </Grid>\r\n\r\n                   <Grid item xs={12}>\r\n                   <Typography style = {{position: 'relative', top:20}}>\r\n                        New user?\r\n                        <Link to = '/registration'>Register</Link>\r\n                    </Typography>\r\n                    </Grid>\r\n                    </Grid>\r\n               </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}  "]},"metadata":{},"sourceType":"module"}