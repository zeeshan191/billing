{"ast":null,"code":"var _jsxFileName = \"C:\\\\billing-apph\\\\src\\\\components\\\\Billings\\\\BillsForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TextField, Button, Grid } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Container, Typography, Card, CardActionArea, CardActions, CardContent } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { startAddBill } from '../../Actions/billsAction';\nimport { addItem, resetItems, incrementQuantity, decrementQuantity, removeItem } from '../../Actions/lineItemsAction';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BillForm() {\n  _s();\n\n  const dispatch = useDispatch();\n  const customersList = useSelector(state => {\n    return state.customer;\n  });\n  const productsList = useSelector(state => {\n    return state.product;\n  });\n  const lineItems = useSelector(state => {\n    return state.lineItems;\n  });\n  const [date, setDate] = useState(new Date());\n  const [customer, setCustomer] = useState('');\n  const [product, setProduct] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [formError, setFormError] = useState({});\n  const error = {}; //validation\n\n  const runValidator = () => {\n    // for date\n    if (!date) {\n      error.date = \"date cannot be blank \";\n    } // for customer\n\n\n    if (customer.length === 0) {\n      error.customer = \"customer cannot be blank \";\n    } // for product\n\n\n    if (product.length === 0) {\n      error.product = \"product cannot be blank \";\n    }\n  };\n\n  const handleDateChange = date => {\n    setDate(date);\n  };\n\n  const handleCustomerChange = (e, val) => {\n    console.log('id', val);\n\n    if (val) {\n      setCustomer(val._id);\n    } else {\n      setCustomer('');\n    }\n  };\n\n  const handleProductChange = (e, val) => {\n    console.log('product_id', val);\n\n    if (val) {\n      setProduct(e.target.value);\n      newLineItem(val);\n    } else {\n      setProduct('');\n    }\n  };\n\n  const newLineItem = item => {\n    const newItem = {\n      'prodId': new Date(),\n      'prodName': item.name,\n      'price': item.price,\n      'product': item._id,\n      'quantity': quantity\n    };\n    dispatch(addItem(newItem));\n    console.log('lineItems', lineItems);\n  }; //decreasing quantity\n\n\n  const handleDecrement = id => {\n    dispatch(decrementQuantity(id));\n  }; //increasing quantity\n\n\n  const handleIncrement = id => {\n    dispatch(incrementQuantity(id));\n  }; //removing item in lineItems\n\n\n  const handleRemove = id => {\n    dispatch(removeItem(id));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    runValidator();\n\n    if (Object.keys(error).length === 0) {\n      setFormError({});\n      const formData = {\n        'date': date,\n        'customer': customer,\n        'lineItems': lineItems\n      };\n      dispatch(startAddBill(formData));\n      setDate(new Date());\n      setCustomer('');\n      setProduct('');\n      dispatch(resetItems());\n    } else {\n      setFormError(error);\n    }\n  };\n\n  const totalBill = () => {\n    let total = 0;\n    lineItems.forEach(item => {\n      total += item.price * item.quantity;\n    });\n    return total;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n            utils: DateFnsUtils,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              size: \"small\",\n              style: {\n                width: \"300px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                margin: \"normal\",\n                id: \"date-picker-dialog\",\n                label: \"Date\",\n                format: \"yyyy/MM/dd\",\n                value: date,\n                onChange: handleDateChange,\n                KeyboardButtonProps: {\n                  'aria-label': 'change date'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: formError.date && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: 'red'\n            },\n            children: [\" \", formError.date, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            options: customersList,\n            getOptionLabel: customer => customer.name,\n            onChange: handleCustomerChange,\n            style: {\n              width: \"300px\"\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"customer\",\n              variant: \"outlined\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: formError.customer && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: 'red'\n            },\n            children: [\" \", formError.customer, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            options: productsList,\n            getOptionLabel: option => option.name,\n            onChange: handleProductChange // value={product || ''}\n            ,\n            size: \"small\",\n            style: {\n              width: \"300px\"\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              label: \"Product\",\n              variant: \"outlined\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: formError.product && /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: 'red'\n            },\n            children: [\" \", formError.product, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          align: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \" ADD \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [lineItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                color: 'teal'\n              },\n              variant: \"b\",\n              component: \"h3\",\n              children: \"Items List :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                color: 'teal'\n              },\n              children: [\"Total Bill : \\u20B9\", totalBill()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            children: lineItems.map(item => {\n              return /*#__PURE__*/_jsxDEV(Card, {\n                elevation: 1,\n                style: {\n                  width: '400px'\n                },\n                size: \"small\",\n                children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                  children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: item.prodName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 37\n                    }, this), \" - Unit Price: \\u20B9\", item.price, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 87\n                    }, this), \"Sub Total: \\u20B9\", item.price * item.quantity]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 36\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      size: \"small\",\n                      color: \"primary\",\n                      onClick: () => {\n                        handleDecrement(item.prodId);\n                      },\n                      children: \" -\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 39\n                    }, this), item.quantity, /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"small\",\n                      color: \"primary\",\n                      onClick: () => {\n                        handleIncrement(item.prodId);\n                      },\n                      children: \" +\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 38\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"small\",\n                      color: \"secondary\",\n                      onClick: () => {\n                        handleRemove(item.prodId);\n                      },\n                      children: \" delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 38\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 36\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 34\n                }, this)\n              }, item.prodId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 34\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BillForm, \"VbjFp2Jmd3hcRunUOi6bycmcU0I=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = BillForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BillForm\");","map":{"version":3,"sources":["C:/billing-apph/src/components/Billings/BillsForm.js"],"names":["React","useState","useSelector","useDispatch","TextField","Button","Grid","FormControl","Container","Typography","Card","CardActionArea","CardActions","CardContent","Autocomplete","startAddBill","addItem","resetItems","incrementQuantity","decrementQuantity","removeItem","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","BillForm","dispatch","customersList","state","customer","productsList","product","lineItems","date","setDate","Date","setCustomer","setProduct","quantity","setQuantity","formError","setFormError","error","runValidator","length","handleDateChange","handleCustomerChange","e","val","console","log","_id","handleProductChange","target","value","newLineItem","item","newItem","name","price","handleDecrement","id","handleIncrement","handleRemove","handleSubmit","preventDefault","Object","keys","formData","totalBill","total","forEach","width","color","params","option","map","prodName","prodId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,EAAoBC,MAApB,EAA4BC,IAA5B,QAAuC,mBAAvC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAAWC,SAAX,EAAsBC,UAAtB,EAAkCC,IAAlC,EAAwCC,cAAxC,EAAyDC,WAAzD,EAAsEC,WAAtE,QAAwF,mBAAxF;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAAQC,OAAR,EAAiBC,UAAjB,EAA8BC,iBAA9B,EAAiDC,iBAAjD,EAAoEC,UAApE,QAAqF,+BAArF;AACA,OAAO,UAAP;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SACIC,uBADJ,EAEIC,kBAFJ,QAGS,sBAHT;;AAME,eAAe,SAASC,QAAT,GAAmB;AAAA;;AAChC,QAAMC,QAAQ,GAACtB,WAAW,EAA1B;AAEA,QAAMuB,aAAa,GAACxB,WAAW,CAAEyB,KAAD,IAAS;AACrC,WAAOA,KAAK,CAACC,QAAb;AACH,GAF8B,CAA/B;AAIA,QAAMC,YAAY,GAAC3B,WAAW,CAAEyB,KAAD,IAAS;AACpC,WAAOA,KAAK,CAACG,OAAb;AACH,GAF6B,CAA9B;AAIA,QAAMC,SAAS,GAAG7B,WAAW,CAAEyB,KAAD,IAAW;AACrC,WAAOA,KAAK,CAACI,SAAb;AACH,GAF4B,CAA7B;AAIA,QAAM,CAAEC,IAAF,EAAOC,OAAP,IAAmBhC,QAAQ,CAAC,IAAIiC,IAAJ,EAAD,CAAjC;AACA,QAAM,CAAEN,QAAF,EAAWO,WAAX,IAA2BlC,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAAE6B,OAAF,EAAUM,UAAV,IAAyBnC,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAAEoC,QAAF,EAAWC,WAAX,IAA2BrC,QAAQ,CAAC,CAAD,CAAzC;AACA,QAAM,CAACsC,SAAD,EAAaC,YAAb,IAA6BvC,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAMwC,KAAK,GAAI,EAAf,CApBgC,CAsBhC;;AACA,QAAMC,YAAY,GAAC,MAAI;AACnB;AACA,QAAG,CAACV,IAAJ,EAAS;AACLS,MAAAA,KAAK,CAACT,IAAN,GAAa,uBAAb;AACD,KAJgB,CAMnB;;;AACA,QAAGJ,QAAQ,CAACe,MAAT,KAAoB,CAAvB,EAAyB;AACrBF,MAAAA,KAAK,CAACb,QAAN,GAAiB,2BAAjB;AACD,KATgB,CAWnB;;;AACA,QAAGE,OAAO,CAACa,MAAR,KAAmB,CAAtB,EAAwB;AACpBF,MAAAA,KAAK,CAACX,OAAN,GAAgB,0BAAhB;AACD;AACN,GAfD;;AAiBA,QAAOc,gBAAgB,GAAIZ,IAAD,IAAU;AAChCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFH;;AAIA,QAAMa,oBAAoB,GAAG,CAACC,CAAD,EAAGC,GAAH,KAAW;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBF,GAAlB;;AACA,QAAGA,GAAH,EAAO;AACHZ,MAAAA,WAAW,CAACY,GAAG,CAACG,GAAL,CAAX;AACH,KAFD,MAEK;AACDf,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AACJ,GAPD;;AASA,QAAMgB,mBAAmB,GAAC,CAACL,CAAD,EAAGC,GAAH,KAAS;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,GAA1B;;AACA,QAAGA,GAAH,EAAO;AACHX,MAAAA,UAAU,CAACU,CAAC,CAACM,MAAF,CAASC,KAAV,CAAV;AACAC,MAAAA,WAAW,CAACP,GAAD,CAAX;AACH,KAHD,MAGO;AACHX,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ,GARD;;AAUA,QAAMkB,WAAW,GAAIC,IAAD,IAAU;AAC1B,UAAMC,OAAO,GAAG;AACZ,gBAAW,IAAItB,IAAJ,EADC;AAEZ,kBAAaqB,IAAI,CAACE,IAFN;AAGZ,eAAUF,IAAI,CAACG,KAHH;AAIZ,iBAAYH,IAAI,CAACL,GAJL;AAKZ,kBAAab;AALD,KAAhB;AAOAZ,IAAAA,QAAQ,CAACT,OAAO,CAACwC,OAAD,CAAR,CAAR;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBlB,SAAzB;AACH,GAVD,CA/DgC,CA2EhC;;;AACA,QAAM4B,eAAe,GAAIC,EAAD,IAAQ;AAC5BnC,IAAAA,QAAQ,CAACN,iBAAiB,CAACyC,EAAD,CAAlB,CAAR;AACH,GAFD,CA5EgC,CAgFhC;;;AACA,QAAMC,eAAe,GAAID,EAAD,IAAQ;AAC5BnC,IAAAA,QAAQ,CAACP,iBAAiB,CAAC0C,EAAD,CAAlB,CAAR;AACH,GAFD,CAjFgC,CAqFhC;;;AACA,QAAME,YAAY,GAAIF,EAAD,IAAQ;AACzBnC,IAAAA,QAAQ,CAACL,UAAU,CAACwC,EAAD,CAAX,CAAR;AACH,GAFD;;AAIA,QAAMG,YAAY,GAAEjB,CAAD,IAAK;AACpBA,IAAAA,CAAC,CAACkB,cAAF;AACAtB,IAAAA,YAAY;;AAEZ,QAAGuB,MAAM,CAACC,IAAP,CAAYzB,KAAZ,EAAmBE,MAAnB,KAA8B,CAAjC,EAAmC;AAC/BH,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACA,YAAM2B,QAAQ,GAAG;AACb,gBAASnC,IADI;AAEb,oBAAaJ,QAFA;AAGb,qBAAcG;AAHD,OAAjB;AAKAN,MAAAA,QAAQ,CAACV,YAAY,CAACoD,QAAD,CAAb,CAAR;AACAlC,MAAAA,OAAO,CAAC,IAAIC,IAAJ,EAAD,CAAP;AACAC,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAX,MAAAA,QAAQ,CAACR,UAAU,EAAX,CAAR;AACC,KAZL,MAYW;AACHuB,MAAAA,YAAY,CAACC,KAAD,CAAZ;AACP;AACJ,GAnBD;;AAqBA,QAAM2B,SAAS,GAAG,MAAM;AACpB,QAAIC,KAAK,GAAG,CAAZ;AAEAtC,IAAAA,SAAS,CAACuC,OAAV,CAAmBf,IAAD,IAAU;AACxBc,MAAAA,KAAK,IAAKd,IAAI,CAACG,KAAL,GAAaH,IAAI,CAAClB,QAA5B;AACH,KAFD;AAIA,WAAOgC,KAAP;AACH,GARD;;AAUA,sBACI,QAAC,SAAD;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEN,YAAhB;AAAA,6BAEA,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACJ,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACA,QAAC,uBAAD;AAAyB,YAAA,KAAK,EAAE1C,YAAhC;AAAA,mCACA,QAAC,WAAD;AAAa,cAAA,IAAI,EAAC,OAAlB;AAA0B,cAAA,KAAK,EAAE;AAACkD,gBAAAA,KAAK,EAAC;AAAP,eAAjC;AAAA,qCACI,QAAC,kBAAD;AACA,gBAAA,MAAM,EAAC,QADP;AAEA,gBAAA,EAAE,EAAC,oBAFH;AAGA,gBAAA,KAAK,EAAC,MAHN;AAIA,gBAAA,MAAM,EAAC,YAJP;AAKA,gBAAA,KAAK,EAAEvC,IALP;AAMA,gBAAA,QAAQ,EAAEY,gBANV;AAOA,gBAAA,mBAAmB,EAAE;AACjB,gCAAc;AADG;AAPrB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADI,eAkBQ,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,oBACEL,SAAS,CAACP,IAAV,iBAAkB,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAACwC,cAAAA,KAAK,EAAG;AAAT,aAAnB;AAAA,4BAAsCjC,SAAS,CAACP,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AADpB;AAAA;AAAA;AAAA;AAAA,gBAlBR,eAsBQ,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACA,QAAC,YAAD;AACG,YAAA,OAAO,EAAEN,aADZ;AAEG,YAAA,cAAc,EAAGE,QAAD,IAAcA,QAAQ,CAAC6B,IAF1C;AAGG,YAAA,QAAQ,EAAEZ,oBAHb;AAIG,YAAA,KAAK,EAAE;AAAC0B,cAAAA,KAAK,EAAC;AAAP,aAJV;AAKG,YAAA,WAAW,EAAGE,MAAD,iBACX,QAAC,SAAD,OAAeA,MAAf;AAAuB,cAAA,KAAK,EAAC,UAA7B;AAAwC,cAAA,OAAO,EAAC,UAAhD;AAA2D,cAAA,SAAS;AAApE;AAAA;AAAA;AAAA;AAAA;AANL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAtBR,eAkCQ,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,oBACElC,SAAS,CAACX,QAAV,iBAAsB,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAAC4C,cAAAA,KAAK,EAAG;AAAT,aAAnB;AAAA,4BAAsCjC,SAAS,CAACX,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AADxB;AAAA;AAAA;AAAA;AAAA,gBAlCR,eAsCQ,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACA,QAAC,YAAD;AACQ,YAAA,OAAO,EAAEC,YADjB;AAEQ,YAAA,cAAc,EAAG6C,MAAD,IAAYA,MAAM,CAACjB,IAF3C;AAGQ,YAAA,QAAQ,EAAEN,mBAHlB,CAIQ;AAJR;AAKQ,YAAA,IAAI,EAAC,OALb;AAMQ,YAAA,KAAK,EAAE;AAACoB,cAAAA,KAAK,EAAC;AAAP,aANf;AAOQ,YAAA,WAAW,EAAGE,MAAD,iBACb,QAAC,SAAD,OAAeA,MAAf;AAAuB,cAAA,KAAK,EAAC,SAA7B;AAAuC,cAAA,OAAO,EAAC,UAA/C;AAA0D,cAAA,SAAS;AAAnE;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAtCR,eAoDQ,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,oBACElC,SAAS,CAACT,OAAV,iBAAqB,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAAC0C,cAAAA,KAAK,EAAG;AAAT,aAAnB;AAAA,4BAAsCjC,SAAS,CAACT,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AADvB;AAAA;AAAA;AAAA;AAAA,gBApDR,eAwDQ,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,KAAK,EAAC,MAAzB;AAAA,iCACI,QAAC,MAAD;AACI,YAAA,IAAI,EAAC,QADT;AAEI,YAAA,OAAO,EAAC,WAFZ;AAGI,YAAA,KAAK,EAAC,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAxDR,eAgEQ,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,qBACCC,SAAS,CAACY,MAAV,GAAmB,CAAnB,iBACG;AAAA,oCACI,QAAC,UAAD;AAAY,cAAA,KAAK,EAAE;AAAE6B,gBAAAA,KAAK,EAAG;AAAV,eAAnB;AAAsC,cAAA,OAAO,EAAC,GAA9C;AAAkD,cAAA,SAAS,EAAC,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,UAAD;AAAY,cAAA,KAAK,EAAE;AAAEA,gBAAAA,KAAK,EAAG;AAAV,eAAnB;AAAA,gDAAqDJ,SAAS,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAQA,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,sBACIrC,SAAS,CAAC4C,GAAV,CAAepB,IAAD,IAAU;AACtB,kCAAO,QAAC,IAAD;AAAyB,gBAAA,SAAS,EAAE,CAApC;AAAuC,gBAAA,KAAK,EAAE;AAACgB,kBAAAA,KAAK,EAAC;AAAP,iBAA9C;AAA+D,gBAAA,IAAI,EAAC,OAApE;AAAA,uCACA,QAAC,cAAD;AAAA,0CACE,QAAC,WAAD;AAAA,4CACC;AAAA,gCAAIhB,IAAI,CAACqB;AAAT;AAAA;AAAA;AAAA;AAAA,4BADD,2BACwCrB,IAAI,CAACG,KAD7C,eACmD;AAAA;AAAA;AAAA;AAAA,4BADnD,uBAEiBH,IAAI,CAACG,KAAL,GAAaH,IAAI,CAAClB,QAFnC;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAKE,QAAC,WAAD;AAAA,4CACG,QAAC,MAAD;AAAQ,sBAAA,IAAI,EAAC,OAAb;AAAqB,sBAAA,KAAK,EAAC,SAA3B;AACE,sBAAA,OAAO,EAAE,MAAM;AAACsB,wBAAAA,eAAe,CAACJ,IAAI,CAACsB,MAAN,CAAf;AAA6B,uBAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADH,EAIGtB,IAAI,CAAClB,QAJR,eAKE,QAAC,MAAD;AAAQ,sBAAA,IAAI,EAAC,OAAb;AAAqB,sBAAA,KAAK,EAAC,SAA3B;AACG,sBAAA,OAAO,EAAE,MAAM;AAACwB,wBAAAA,eAAe,CAACN,IAAI,CAACsB,MAAN,CAAf;AAA6B,uBADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF,eAQE,QAAC,MAAD;AAAQ,sBAAA,IAAI,EAAC,OAAb;AAAqB,sBAAA,KAAK,EAAC,WAA3B;AACG,sBAAA,OAAO,EAAE,MAAM;AAACf,wBAAAA,YAAY,CAACP,IAAI,CAACsB,MAAN,CAAZ;AAA0B,uBAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARF;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,iBAAYtB,IAAI,CAACsB,MAAjB;AAAA;AAAA;AAAA;AAAA,sBAAP;AAoBF,aArBA;AADJ;AAAA;AAAA;AAAA;AAAA,kBARA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhER;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0GH;;GAnOyBrD,Q;UACPrB,W,EAEKD,W,EAIDA,W,EAIDA,W;;;KAXIsB,Q","sourcesContent":["import React, {useState} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {TextField,  Button, Grid} from '@material-ui/core'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport {   Container, Typography, Card, CardActionArea,  CardActions, CardContent} from '@material-ui/core'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport { startAddBill } from '../../Actions/billsAction'\r\nimport {addItem, resetItems , incrementQuantity, decrementQuantity, removeItem} from '../../Actions/lineItemsAction'\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n  } from '@material-ui/pickers';\r\n\r\n\r\n  export default function BillForm(){\r\n    const dispatch=useDispatch()\r\n\r\n    const customersList=useSelector((state)=>{\r\n        return state.customer\r\n    })\r\n\r\n    const productsList=useSelector((state)=>{\r\n        return state.product\r\n    })\r\n\r\n    const lineItems = useSelector((state) => {\r\n        return state.lineItems\r\n    })\r\n\r\n    const [ date,setDate ] = useState(new Date())\r\n    const [ customer,setCustomer ] = useState('')\r\n    const [ product,setProduct ] = useState('')\r\n    const [ quantity,setQuantity ] = useState(1)\r\n    const [formError , setFormError] = useState({})\r\n    const error  = {}\r\n\r\n    //validation\r\n    const runValidator=()=>{\r\n        // for date\r\n        if(!date){\r\n            error.date = \"date cannot be blank \"\r\n          }\r\n\r\n        // for customer\r\n        if(customer.length === 0){\r\n            error.customer = \"customer cannot be blank \"\r\n          }       \r\n\r\n        // for product\r\n        if(product.length === 0){\r\n            error.product = \"product cannot be blank \"\r\n          }    \r\n    }\r\n\r\n    const  handleDateChange = (date) => {\r\n        setDate(date)\r\n      }\r\n\r\n    const handleCustomerChange = (e,val) => {\r\n        console.log('id', val)\r\n        if(val){\r\n            setCustomer(val._id )\r\n        }else{\r\n            setCustomer('')\r\n        }  \r\n    }\r\n\r\n    const handleProductChange=(e,val)=>{\r\n        console.log('product_id', val)\r\n        if(val){\r\n            setProduct(e.target.value)\r\n            newLineItem(val)\r\n        } else {\r\n            setProduct('')\r\n        }\r\n    }\r\n\r\n    const newLineItem = (item) => {\r\n        const newItem = {\r\n            'prodId' : new Date(),\r\n            'prodName' : item.name,\r\n            'price' : item.price,\r\n            'product' : item._id,\r\n            'quantity' : quantity\r\n        }\r\n        dispatch(addItem(newItem))\r\n        console.log('lineItems', lineItems)\r\n    }\r\n\r\n    //decreasing quantity\r\n    const handleDecrement = (id) => {\r\n        dispatch(decrementQuantity(id))\r\n    }\r\n\r\n    //increasing quantity\r\n    const handleIncrement = (id) => {\r\n        dispatch(incrementQuantity(id))\r\n    }\r\n\r\n    //removing item in lineItems\r\n    const handleRemove = (id) => {\r\n        dispatch(removeItem(id))\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        runValidator()\r\n\r\n        if(Object.keys(error).length === 0){\r\n            setFormError({})\r\n            const formData = {\r\n                'date' : date ,\r\n                'customer' : customer,\r\n                'lineItems' : lineItems                \r\n            }\r\n            dispatch(startAddBill(formData))\r\n            setDate(new Date())\r\n            setCustomer('')\r\n            setProduct('')\r\n            dispatch(resetItems())\r\n            } else {\r\n                setFormError(error)\r\n        }        \r\n    }\r\n\r\n    const totalBill = () => {\r\n        let total = 0\r\n\r\n        lineItems.forEach((item) => {\r\n            total += (item.price * item.quantity)\r\n        })\r\n\r\n        return total\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <form onSubmit={handleSubmit}>\r\n\r\n            <Grid container spacing={2} >\r\n        <Grid item xs={12}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <FormControl size=\"small\" style={{width:\"300px\"}} >\r\n            <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Date\"\r\n            format=\"yyyy/MM/dd\"\r\n            value={date}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n                'aria-label': 'change date',\r\n                }}\r\n                />\r\n            </FormControl>\r\n            </MuiPickersUtilsProvider>\r\n            </Grid>\r\n                    <Grid item xs={10} >\r\n                    { formError.date && <Typography style={{color : 'red'}}> {formError.date} </Typography> }\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}> \r\n                    <Autocomplete\r\n                       options={customersList}\r\n                       getOptionLabel={(customer) => customer.name}\r\n                       onChange={handleCustomerChange}\r\n                       style={{width:\"300px\"}}\r\n                       renderInput={(params) => (\r\n                         <TextField {...params} label=\"customer\" variant=\"outlined\" fullWidth />\r\n                       )}\r\n                     />\r\n                   </Grid>\r\n                    \r\n                    <Grid item xs={10} >\r\n                    { formError.customer && <Typography style={{color : 'red'}}> {formError.customer} </Typography> }\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                    <Autocomplete\r\n                            options={productsList}\r\n                            getOptionLabel={(option) => option.name}\r\n                            onChange={handleProductChange}\r\n                            // value={product || ''}\r\n                            size=\"small\" \r\n                            style={{width:\"300px\"}}\r\n                            renderInput={(params) => (\r\n                            <TextField {...params} label=\"Product\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                    />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={10} >\r\n                    { formError.product && <Typography style={{color : 'red'}}> {formError.product} </Typography> }\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10} align='left'> \r\n                        <Button \r\n                            type=\"submit\" \r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                        > ADD </Button>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} >\r\n                    {lineItems.length > 0 && (\r\n                        <div>\r\n                            <Typography style={{ color : 'teal'}} variant='b' component='h3'>Items List :</Typography>\r\n                            <Typography style={{ color : 'teal'}}>Total Bill : ₹{totalBill()}</Typography>\r\n                        </div>\r\n                    )}\r\n\r\n                    <Grid item xs={10   } >\r\n                       {lineItems.map((item) => {\r\n                          return <Card  key={item.prodId} elevation={1} style={{width:'400px'}} size=\"small\">\r\n                                 <CardActionArea>\r\n                                   <CardContent>\r\n                                    <b>{item.prodName}</b> - Unit Price: ₹{item.price}<br/>\r\n                                       Sub Total: ₹{item.price * item.quantity}\r\n                                   </CardContent>\r\n                                   <CardActions >\r\n                                      <Button size=\"small\" color=\"primary\"\r\n                                        onClick={() => {handleDecrement(item.prodId)}}> -   \r\n                                     </Button>\r\n                                     {item.quantity}\r\n                                     <Button size=\"small\" color=\"primary\"\r\n                                        onClick={() => {handleIncrement(item.prodId)}}> +\r\n                                     </Button>\r\n                                     <Button size=\"small\" color=\"secondary\"\r\n                                        onClick={() => {handleRemove(item.prodId)}} > delete \r\n                                    </Button>\r\n                                   </CardActions>\r\n                                 </CardActionArea>\r\n                                  </Card>\r\n                       })}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                </Grid>    \r\n            </form>  \r\n        </Container>                \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}