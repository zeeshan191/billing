{"ast":null,"code":"var _jsxFileName = \"C:\\\\billing-app-main\\\\src\\\\components\\\\customers\\\\CustomerForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport validator from 'validator';\nimport { useDispatch } from 'react-redux';\nimport { startAddCustomers, startEditCustomer } from '../../Actions/customerActions';\nimport { TextField, Button, Grid } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomerForm({\n  id,\n  name: title,\n  email: mail,\n  phNumber: mobile,\n  handleToggle\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState(title ? title : '');\n  const [phNumber, setphNumber] = useState(mobile ? mobile : '');\n  const [email, setEmail] = useState(mail ? mail : '');\n  const [formError, setFormError] = useState({});\n  const error = {};\n\n  const handleInput = e => {\n    const input = e.target.name;\n\n    if (input === \"name\") {\n      setName(e.target.value);\n    } else if (input === \"phNumber\") {\n      setphNumber(e.target.value);\n    } else if (input === \"email\") {\n      setEmail(e.target.value);\n    }\n  };\n\n  const runValidation = () => {\n    //name\n    if (name.trim().length === 0) {\n      error.name = \"name cannot be empty\";\n    } //email\n\n\n    if (email.trim().length === 0) {\n      error.email = 'email cannot be empty';\n    } else if (!validator.isEmail(email)) {\n      error.email = \"invalid email format\";\n    } // phnumber\n\n\n    if (phNumber.trim().length === 0) {\n      error.phNumber = \"mobile cannot be blank\";\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //validation part \n\n    runValidation();\n\n    if (Object.keys(error).length === 0) {\n      setFormError({});\n      const formData = {\n        name: name,\n        mobile: Number(phNumber),\n        email: email\n      };\n\n      if (handleToggle) {\n        dispatch(startEditCustomer(formData, id));\n        handleToggle();\n      } else {\n        dispatch(startAddCustomers(formData));\n      } // reset form\n\n\n      setName('');\n      setphNumber('');\n      setEmail('');\n    } else {\n      setFormError(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), title ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: 'orange'\n      },\n      children: \"Edit Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: 'green'\n      },\n      children: \"Add Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 68\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            size: \"small\",\n            style: {\n              width: \"300px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              type: \"text\",\n              label: \"name\",\n              value: name,\n              name: \"name\",\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 108\n            }, this), formError.name && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: formError.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 90\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            size: \"small\",\n            style: {\n              width: \"300px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              type: \"text\",\n              label: \"mobile\",\n              value: phNumber,\n              name: \"phNumber\",\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 116\n            }, this), formError.phNumber && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: formError.phNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 40\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 98\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            size: \"small\",\n            style: {\n              width: \"300px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              type: \"email\",\n              label: \"email\",\n              value: email,\n              name: \"email\",\n              onChange: handleInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 111\n            }, this), formError.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red'\n              },\n              children: formError.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 92\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            size: \"small\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: [\" \", title ? 'Save' : 'Add', \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomerForm, \"GVj7DSWiSFXO5DnntixlEARMcoU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CustomerForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerForm\");","map":{"version":3,"sources":["C:/billing-app-main/src/components/customers/CustomerForm.js"],"names":["React","useState","validator","useDispatch","startAddCustomers","startEditCustomer","TextField","Button","Grid","FormControl","CustomerForm","id","name","title","email","mail","phNumber","mobile","handleToggle","dispatch","setName","setphNumber","setEmail","formError","setFormError","error","handleInput","e","input","target","value","runValidation","trim","length","isEmail","handleSubmit","preventDefault","Object","keys","formData","Number","color","width"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport validator from 'validator'\r\nimport {useDispatch} from 'react-redux'\r\nimport { startAddCustomers, startEditCustomer } from '../../Actions/customerActions'\r\nimport {TextField,  Button, Grid} from '@material-ui/core'\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\nexport default function CustomerForm({id , name : title , email : mail , phNumber:mobile , handleToggle }){\r\n    const dispatch  = useDispatch()\r\n    const [name , setName] = useState(title ? title : '')\r\n    const [phNumber , setphNumber] = useState(mobile ? mobile : '')\r\n    const [email , setEmail] = useState(mail ? mail :'')\r\n    const [formError , setFormError] = useState({})\r\n    const error = {}\r\n\r\n    const handleInput = (e) =>{\r\n        const input = e.target.name\r\n        if(input === \"name\"){\r\n            setName(e.target.value)\r\n        } else if(input === \"phNumber\"){\r\n            setphNumber(e.target.value)\r\n        } else if(input === \"email\"){\r\n            setEmail(e.target.value)\r\n        }\r\n    }\r\n\r\n    const runValidation=()=>{\r\n        //name\r\n        if(name.trim().length === 0){\r\n            error.name = \"name cannot be empty\"\r\n        }\r\n        //email\r\n        if(email.trim().length === 0){\r\n            error.email = 'email cannot be empty'\r\n        } else if(!(validator.isEmail(email))){\r\n            error.email =\"invalid email format\"\r\n        }\r\n\r\n        // phnumber\r\n        if(phNumber.trim().length === 0 ){\r\n            error.phNumber = \"mobile cannot be blank\"\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        //validation part \r\n        runValidation()\r\n\r\n        if(Object.keys(error).length === 0 ){\r\n            setFormError({})\r\n\r\n            const formData = {\r\n                name : name,\r\n                mobile : Number(phNumber),\r\n                email : email\r\n            }\r\n\r\n            if(handleToggle){\r\n                dispatch(startEditCustomer(formData ,id))\r\n                handleToggle()\r\n            } else {\r\n                dispatch(startAddCustomers(formData))\r\n            }\r\n    \r\n            // reset form\r\n    \r\n            setName('')\r\n            setphNumber('')\r\n            setEmail('')\r\n\r\n        } else {\r\n            setFormError(error)\r\n        }\r\n        \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <hr/>\r\n            {title ? <h2 style={{color:'orange'}}>Edit Form</h2> : <h2 style={{color:'green'}}>Add Customer</h2>}\r\n            <form onSubmit = {handleSubmit}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}> \r\n                <FormControl size=\"small\" style={{width:\"300px\"}} >\r\n                <TextField   type=\"text\" label=\"name\" value={name}  name = \"name\" onChange={handleInput} /><br/>\r\n                {formError.name && <span style={{color : 'red'}}>{formError.name}</span>}<br/>\r\n                </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                <FormControl size=\"small\" style={{width:\"300px\"}} >     \r\n                <TextField  type=\"text\" label=\"mobile\" value={phNumber} name = \"phNumber\" onChange={handleInput} /><br/>\r\n                {formError.phNumber && <span style={{color : 'red'}}>{formError.phNumber}</span>}<br/>\r\n                </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}> \r\n                <FormControl size=\"small\" style={{width:\"300px\"}} >\r\n                <TextField   type=\"email\" label=\"email\" value={email} name = \"email\" onChange={handleInput} /><br/>\r\n                {formError.email && <span style={{color : 'red'}}>{formError.email}</span>}<br/>\r\n                </FormControl>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}> \r\n                <Button type=\"submit\" size=\"small\" variant=\"contained\" color=\"primary\"> {title ? 'Save' : 'Add'} </Button>\r\n                </Grid>\r\n            </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}